trigger:
  - master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
  - job: Build
    displayName: 'Build Project ðŸ”¨'
    steps:
      - task: NuGetToolInstaller@1
      - task: NuGetCommand@2
        inputs:
          command: 'restore'
          restoreSolution: '$(solution)'
      - task: VSBuild@1
        inputs:
          solution: '$(solution)'
          msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'
      - task: DotNetCoreCLI@2
        displayName: Unit Tests
        inputs:
          command: 'test'
          projects: '**/*UnitTests/*.csproj'
          arguments: '--configuration $(buildConfiguration)  --no-build --collect "XPlat Code Coverage"'

  - job: Deploy
    dependsOn: Build
    displayName: 'Deploy to Azure'
    steps:
      - task: NuGetCommand@2
        inputs:
          command: 'restore'
          restoreSolution: '$(solution)'

      - task: DotNetCoreCLI@2
        inputs:
          command: publish
          publishWebProjects: True
          arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
          zipAfterPublish: True
          workingDirectory: '.'

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)' 
          artifactName: 'api'